const onBut=(function(){ async function putCont(array){ const val=/^(?:\/?[a-zA-Z0-9_-]+)+\.[a-zA-Z]{2}$/gm;const cont=await Promise.all(array.map(async(elemento)=>val.test(elemento)?await getUrl(elemento):elemento));return cont.join("\n")}async function getUrl(url){ let data=await fetch(url);data=await data.text();return data}async function file(contenido){ let blob=new Blob([await putCont(contenido)]);return blob}async function zip(archivos){let zip=new JSZip(); for(const archivo of archivos){ const[nombre,...contenido]=archivo; if(contenido.some(elemento=>{return Array.isArray(elemento)})){ const folder=zip.folder(nombre); for(const archivo of contenido){const[nombreArchivo,...contenidoArchivo]=archivo;folder.file(nombreArchivo,await putCont(contenidoArchivo))}}else{ zip.file(nombre,await putCont(contenido))}} let blob=await zip.generateAsync({type:"blob"});return blob} return{createFile:async function(nombre,...contenido){ let desc=typeof contenido.slice(-1)[0]==="boolean"?contenido.pop():!0;const resultado=contenido.some(elemento=>{return Array.isArray(elemento)})?await zip(contenido):await file(contenido); if(desc){ let url=window.URL.createObjectURL(resultado); let link=document.createElement('a');link.href=url;link.download=nombre;link.click(); window.URL.revokeObjectURL(url)} return desc?null:resultado},getFile:function(){return""}}})();